# 1️⃣ It runs only when a pull request targeting main is opened or updated (synchronized).
name:  wip pipeline

on: 
  push:
    branches:
      - wip
#  2️⃣ This job runs on Ubuntu. It sets environment variables from GitHub secrets (used in backend).
jobs:
  wip-pipeline:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      MONGODB_TEST_URI: ${{ secrets.MONGODB_TEST_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GOOGLE_REDIRECT_URI_LOGIN: ${{ secrets.GOOGLE_REDIRECT_URI_LOGIN }}
      GOOGLE_REDIRECT_URI_SIGNUP: ${{ secrets.GOOGLE_REDIRECT_URI_SIGNUP }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      APPWRITE_PROJECT_ID: ${{ secrets.APPWRITE_PROJECT_ID }}
      APPWRITE_ENDPOINT: ${{ secrets.APPWRITE_ENDPOINT }}
      APPWRITE_API_KEY: ${{ secrets.APPWRITE_API_KEY }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS_USER: ${{ secrets.EMAIL_PASS_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

      # Frontend (must be prefixed VITE_)
      VITE_APPWRITE_ENDPOINT: ${{ secrets.VITE_APPWRITE_ENDPOINT }}
      VITE_APPWRITE_PROJECT_ID: ${{ secrets.VITE_APPWRITE_PROJECT_ID }}
      VITE_APPWRITE_API_KEY: ${{ secrets.VITE_APPWRITE_API_KEY }}
      VITE_APPWRITE_BUCKET_ID: ${{ secrets.VITE_APPWRITE_BUCKET_ID }}
      VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
      VITE_FRONTEND_URL: ${{ secrets.VITE_FRONTEND_URL }}
      VITE_GA_MEASUREMENT_ID: ${{ secrets.VITE_GA_MEASUREMENT_ID }}
      VITE_GA_PROPERTY_ID: ${{ secrets.VITE_GA_PROPERTY_ID }}
      VITE_GITHUB_CLIENT_ID: ${{ secrets.VITE_GITHUB_CLIENT_ID }}
      VITE_GITHUB_CLIENT_SECRET: ${{ secrets.VITE_GITHUB_CLIENT_SECRET }}
      VITE_GITHUB_URI: ${{ secrets.VITE_GITHUB_URI }}
      VITE_PRICE_ID_050: ${{ secrets.VITE_PRICE_ID_050 }}
      VITE_PRICE_ID_1E: ${{ secrets.VITE_PRICE_ID_1E }}
      VITE_PRICE_ID_2E: ${{ secrets.VITE_PRICE_ID_2E }}
      VITE_PUBLIC_STRIPE_KEY: ${{ secrets.VITE_PUBLIC_STRIPE_KEY }}
      VITE_UPLOAD_PASS: ${{ secrets.VITE_UPLOAD_PASS }}
      VITE_UPLOAD_USER: ${{ secrets.VITE_UPLOAD_USER }}

      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      
# 3️⃣ Pulls the repo code into the runner and installs Node 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Always fail (for testing)
      #   run: exit 1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # === FRONTEND ===
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Lint frontend
        run: npm run lint
        working-directory: ./frontend

      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      # === BACKEND ===
      - name: Install backend dependencies
        run: npm install
        working-directory: ./backend

      - name: Lint backend
        run: npm run lint
        working-directory: ./backend

      - name: Build backend
        run: npm run build
        working-directory: ./backend

      # === E2E ===
      - name: Install E2E dependencies
        run: npm install
        working-directory: ./e2e

      - name: Start frontend dev server in background
        run: npm run dev &
        working-directory: ./frontend

      - name: Wait for frontend to be ready
        run: npx wait-on http://localhost:5173

      - name: Start backend server in background
        run: npm run start &
        working-directory: ./backend
        env:
          MONGODB_TEST_URI: ${{ secrets.MONGODB_TEST_URI }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}

      - name: Wait for backend to be ready
        run: npx wait-on http://localhost:3001/health

      - name: Run Cypress tests
        run: npm run cypress:run
        working-directory: ./e2e
        env:
          CYPRESS_BASE_URL: http://localhost:5173

      # === BACKEND TESTS ===

      - name: Run backend tests
        run: npm run test
        working-directory: ./backend

      # === Deployment ===
      - name: Trigger deployment
        env:
          # CONDITION is true if commit messages contain "#skip"
          CONDITION: ${{ contains(join(github.event.commits.*.message, ' '), '#skip') }}
        if: ${{ env.CONDITION == 'false' }}
        run: |
          curl -X GET \
            -H "Accept: application/json" \
            "https://api.render.com/deploy/${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}"
