paths:
  /api/commodity:
    get:
      summary: Get all commodities
      tags:
        - Commodities
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for pagination
      responses:
        '200':
          description: List of commodities
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                        description:
                          type: string
                        category:
                          type: array
                          items:
                            type: string
                        price:
                          type: number
                        currency:
                          type: string
                        stripePriceId:
                          type: string
                        soldCount:
                          type: integer
                        stock:
                          type: integer
                        active:
                          type: boolean
                        images:
                          type: array
                          items:
                            type: string
                        comments:
                          type: array
                          items:
                            type: object
                            properties:
                              user:
                                type: string
                              text:
                                type: string
                              rating:
                                type: integer
                                minimum: 0
                                maximum: 5
                        createdAt:
                          type: string
                        updatedAt:
                          type: string

    post:
      summary: Create a new commodity
      security:
        - bearerAuth: []
      tags:
        - Commodities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, price, currency, stripePriceId, stock]
              properties:
                name:
                  type: string
                  example: "Tarot Deck"
                description:
                  type: string
                  example: "78-card traditional tarot deck"
                category:
                  type: array
                  items:
                    type: string
                  example: ["Books", "Esoterica"]
                price:
                  type: number
                  example: 19.99
                currency:
                  type: string
                  example: "eur"
                stripePriceId:
                  type: string
                  example: "price_12345abc"
                stock:
                  type: integer
                  example: 100
                active:
                  type: boolean
                  example: true
                images:
                  type: array
                  items:
                    type: string
                  example: ["https://example.com/tarot.jpg"]
      responses:
        '201':
          description: Commodity created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                  currency:
                    type: string


  /api/commodity/categories:
    get:
      summary: Get all unique commodity categories
      tags:
        - Commodities
      responses:
        '200':
          description: List of unique categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: string
        '500':
          description: Server error

  /api/commodity/{id}:
    get:
      summary: Get a commodity by ID
      tags:
        - Commodities
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Commodity ID
      responses:
        '200':
          description: Commodity retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      category:
                        type: array
                        items:
                          type: string
                      price:
                        type: number
                      currency:
                        type: string
                      stripePriceId:
                        type: string
                      soldCount:
                        type: integer
                      stock:
                        type: integer
                      active:
                        type: boolean
                      images:
                        type: array
                        items:
                          type: string
                      comments:
                        type: array
                        items:
                          type: object
                          properties:
                            user:
                              type: string
                            text:
                              type: string
                            rating:
                              type: integer
                              minimum: 0
                              maximum: 5
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
        '404':
          description: Commodity not found

    patch:
      summary: Update a commodity (admin only)
      security:
        - bearerAuth: []
      tags:
        - Commodities
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Commodity ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Updated Tarot Deck"
                description:
                  type: string
                  example: "Updated description"
                category:
                  type: array
                  items:
                    type: string
                  example: ["Books", "Esoterica"]
                price:
                  type: number
                  example: 24.99
                stock:
                  type: integer
                  example: 150
                active:
                  type: boolean
                  example: true
                images:
                  type: array
                  items:
                    type: string
                  example: ["https://example.com/newimage.jpg"]
      responses:
        '200':
          description: Commodity updated successfully
        '400':
          description: Invalid request
        '404':
          description: Commodity not found

    delete:
      summary: Delete a commodity (admin only)
      security:
        - bearerAuth: []
      tags:
        - Commodities
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Commodity ID
      responses:
        '200':
          description: Commodity deleted successfully
        '404':
          description: Commodity not found

  /api/commodity/sell/{id}:
    patch:
      summary: Sell a commodity (decrease stock and increase sold count)
      security:
        - bearerAuth: []
      tags:
        - Commodities
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [quantity]
              properties:
                quantity:
                  type: integer
                  minimum: 1
                  example: 2
      responses:
        '200':
          description: Commodity sold successfully

  /api/commodity/comments:
    get:
      summary: Get all comments across commodities (admin only)
      security:
        - bearerAuth: []
      tags:
        - Commodities
      responses:
        '200':
          description: List of all comments with commodity and user info
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Comment ID
                        user:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                            email:
                              type: string
                        commodity:
                          type: object
                          properties:
                            _id:
                              type: string
                            name:
                              type: string
                        text:
                          type: string
                        rating:
                          type: integer
                          minimum: 0
                          maximum: 5
                        isApproved:
                          type: boolean
                        createdAt:
                          type: string
        '401':
          description: Unauthorized (missing or invalid token)
        '403':
          description: Forbidden (requires ADMIN role)
        '500':
          description: Server error

  /api/commodity/{id}/comments:
    post:
      summary: Add a comment to a commodity
      security:
        - bearerAuth: []
      tags:
        - Commodities
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Commodity ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user, text]
              properties:
                user:
                  type: string
                  example: "68b17388d0c907eea3073b0e"   # 👈 now in body
                text:
                  type: string
                  example: "Really nice deck, love the print quality!"
                rating:
                  type: integer
                  minimum: 0
                  maximum: 5
                  example: 5
      responses:
        '200':
          description: Comment added successfully
        '400':
          description: Invalid input
        '404':
          description: Commodity not found

    delete:
      summary: Clear all comments from a commodity (admin only)!
      security:
        - bearerAuth: []
      tags:
        - Commodities
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Commodity ID
      responses:
        '200':
          description: All comments cleared successfully
        '404':
          description: Commodity not found
          
  /api/commodity/{id}/comments/{commentId}:
    delete:
      summary: Delete a specific comment from a commodity (admin only)
      security:
        - bearerAuth: []
      tags:
        - Commodities
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Commodity ID
        - in: path
          name: commentId
          required: true
          schema:
            type: string
          description: Comment ID
      responses:
        '200':
          description: Comment deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      comments:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            user:
                              type: string
                            text:
                              type: string
                            rating:
                              type: integer
                              minimum: 0
                              maximum: 5
                            isApproved:
                              type: boolean
                            createdAt:
                              type: string
        '400':
          description: Invalid request (missing IDs)
        '404':
          description: Commodity or Comment not found

  /api/commodity/{commodityId}/comments/{commentId}:
    patch:
      summary: Update a specific comment (admin only)
      description: Update fields of a specific comment inside a commodity, such as toggling `isApproved`.
      security:
        - bearerAuth: []
      tags:
        - Commodities
      parameters:
        - in: path
          name: commodityId
          required: true
          schema:
            type: string
          description: Commodity ID
        - in: path
          name: commentId
          required: true
          schema:
            type: string
          description: Comment ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isApproved:
                  type: boolean
                  example: false
      responses:
        '200':
          description: Comment updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: Commodity ID
                      name:
                        type: string
                      comments:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              description: Comment ID
                            user:
                              type: string
                              description: User ID
                            text:
                              type: string
                            rating:
                              type: integer
                              minimum: 0
                              maximum: 5
                            isApproved:
                              type: boolean
                            createdAt:
                              type: string
                              format: date-time
        '400':
          description: Commodity ID and Comment ID are required
        '401':
          description: Unauthorized (missing or invalid token)
        '403':
          description: Forbidden (requires ADMIN role)
        '404':
          description: Commodity or Comment not found
        '500':
          description: Server error

  /api/commodity/comments/clear/old-unapproved:
    delete:
      summary: Delete old unapproved comments (admin only)
      description: Deletes all comments that are not approved and have stayed unapproved for more than 5 days (uses `updatedAt` timestamp).
      security:
        - bearerAuth: []
      tags:
        - Commodities
      responses:
        '200':
          description: Number of comments deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: "3 unapproved comments older than 5 days were deleted."
        '401':
          description: Unauthorized (missing or invalid token)
        '403':
          description: Forbidden (requires ADMIN role)
        '500':
          description: Server error

  /api/commodity/comments/user/{userId}:
    get:
      summary: Get all comments by a specific user
      description: Returns all comments created by a given user across all commodities.  
        Accessible by the user themself or an admin.
      security:
        - bearerAuth: []
      tags:
        - Commodities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID whose comments to retrieve
      responses:
        '200':
          description: List of comments by the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        commentId:
                          type: string
                        commodity:
                          type: object
                          properties:
                            _id:
                              type: string
                            name:
                              type: string
                        text:
                          type: string
                        rating:
                          type: integer
                          minimum: 0
                          maximum: 5
                        isApproved:
                          type: boolean
                        createdAt:
                          type: string
        '401':
          description: Unauthorized (missing or invalid token)
        '403':
          description: Forbidden (not self or admin)
        '404':
          description: User or comments not found

    delete:
      summary: Delete all comments by a specific user
      description: Deletes every comment made by a given user across all commodities.  
        Accessible by the user themself or an admin (GDPR right to erasure).
      security:
        - bearerAuth: []
      tags:
        - Commodities
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID whose comments to delete
      responses:
        '200':
          description: All comments by the user were deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    example: "All comments by user 68cc2070faf6a7fb15346b03 were deleted"
        '401':
          description: Unauthorized (missing or invalid token)
        '403':
          description: Forbidden (not self or admin)
        '404':
          description: User or comments not found
        '500':
          description: Server error
